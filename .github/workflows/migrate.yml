name: Apply DB Migrations

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Target environment: staging or production'
        required: true
        default: 'staging'

jobs:
  migrate:
    runs-on: ubuntu-latest
    env:
      NODE_OPTIONS: --max_old_space_size=4096
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm ci

      - name: Select environment
        id: env
        run: |
          echo "env=${{ github.event.inputs.environment }}" >> $GITHUB_OUTPUT

      - name: Prepare env
        run: |
          if [ "${{ github.event.inputs.environment }}" = "production" ]; then
            echo "Using production DATABASE_URL"
            # production DATABASE_URL should be stored in repo secrets as PROD_DATABASE_URL
            echo "DATABASE_URL=${{ secrets.PROD_DATABASE_URL }}" >> $GITHUB_ENV
          else
            echo "Using staging DATABASE_URL"
            echo "DATABASE_URL=${{ secrets.STAGING_DATABASE_URL }}" >> $GITHUB_ENV
          fi

      - name: Run migrations (staging auto / production manual approval)
        if: ${{ github.event.inputs.environment == 'staging' }}
        run: npm --workspace=@emperione/api run migrate:run -- --backup

  migrate-production:
    runs-on: ubuntu-latest
    needs: migrate
    if: ${{ github.event.inputs.environment == 'production' }}
    environment:
      name: production
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm ci

      - name: Require approval
        uses: peter-evans/wait-for-approval@v2
        with:
          approvers: 'team:emperione' # adjust to your org/team
          timeout-minutes: 120

      - name: Set PROD DB URL
        run: echo "DATABASE_URL=${{ secrets.PROD_DATABASE_URL }}" >> $GITHUB_ENV

      - name: Run migrations (production)
        run: npm --workspace=@emperione/api run migrate:run -- --backup
